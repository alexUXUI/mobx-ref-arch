# Workflow name
name: Pull Request

# Events to trigger this workflow.
on:
  pull_request:
    branches:
      - main

# GH Action ENVS
env:
  cache-name: cache-node-modules

jobs:
  # Saves execution time on the free tier. Non-blocking.
  cancelprevious:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  # Loads the node modeules from cache or downloads them
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Prepare Node Modules
        id: cache-nodemodules
        uses: actions/cache@v2

        # Load node modules from cache or download them
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

        # if no cache hit, install deps.
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install

  # Building
  build:
    runs-on: ubuntu-latest
    needs:
      - install

    steps:
      - uses: actions/checkout@v3

      # Load node modules and build from cache
      - uses: actions/cache@v2
        id: load-code-from-cache
        with:
          path: |
            node_modules
            build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('src/**') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
        if: steps.load-code-from-cache.outputs.cache-hit != 'true'
      - run: npm run build

  # Linting
  lint:
    runs-on: ubuntu-latest
    needs:
      - install

    steps:
      - uses: actions/checkout@v3
      # Load node modules from cache
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - run: npm run lint

  # Unit tests
  test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      # Load node modules from cache or download them
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - run: npm run test

  # CodeQL-Build:
  #   # CodeQL runs on ubuntu-latest, windows-latest, and macos-latest
  #   runs-on: ubuntu-latest

  #   permissions:
  #     # required for all workflows
  #     security-events: write

  #     # only required for workflows in private repositories
  #     actions: read
  #     contents: read

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     # Initializes the CodeQL tools for scanning.
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v2
  #       # Override language selection by uncommenting this and choosing your languages
  #       with:
  #         languages: javascript, typescript
  #           - uses: actions/checkout@v2

  #     - name: Cache node modules
  #       id: cache-nodemodules
  #       uses: actions/cache@v2

  #       with:
  #         # caching node_modules
  #         path: node_modules
  #         # cache key
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         # cache key for cross-branch cache.
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #     - name: Install Dependencies
  #       # if no cache hit, install deps.
  #       if: steps.cache-nodemodules.outputs.cache-hit != 'true'
  #       run: npm install

  #     - run: npm run build

  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v2
